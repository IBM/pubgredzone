apiVersion: v1
kind: Service
metadata:
  name: rotisserie-static
spec:
  ports:
  - port: 8082
    protocol: TCP
    name: rotisserie-static
  selector:
    app: rotisserie-static
---
apiVersion: v1
kind: Service
metadata:
  name: rotisserie-ocr
spec:
  ports:
  - port: 3001
    protocol: TCP
    name: rotisserie-ocr
  selector:
    app: rotisserie-ocr
---
apiVersion: v1
kind: Service
metadata:
  name: rotisserie-app
spec:
  ports:
  - port: 3000
    protocol: TCP
    name: rotisserie-app
  selector:
    app: rotisserie-app
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: rotisserie-static
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: rotisserie-static
    spec:
      containers:
      - name: rotisserie-static
        image: registry.ng.bluemix.net/rotisserie/rotisserie-static:{{ .Values.images.tag }}
        imagePullPolicy: Always
        env:
        - name: NGINX_LISTEN
          value: "*:8082"
        ports:
        - containerPort: 8082
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: rotisserie-app
spec:
  template:
    metadata:
      labels:
        app: rotisserie-app
    spec:
      containers:
        - name: rotisserie-app
          image: registry.ng.bluemix.net/rotisserie/rotisserie-app:{{ .Values.images.tag }}
          env:
          - name: token
            valueFrom:
              secretKeyRef:
                name: rotisserie-secrets
                key: token
          - name: clientID
            valueFrom:
              secretKeyRef:
                name: rotisserie-secrets
                key: clientID
          ports:
            - containerPort: 3000
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: rotisserie-ocr
spec:
  template:
    metadata:
      labels:
        app: rotisserie-ocr
    spec:
      containers:
        - name: rotisserie-ocr
          image: registry.ng.bluemix.net/rotisserie/rotisserie-ocr:{{ .Values.images.tag }}
          ports:
            - containerPort: 3001
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: rotisserie-ingress
  annotations:
    kubernetes.io/tls-acme: "true"
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/ingress.class: nginx
spec:
  tls:
  - secretName: rotisserie-tls
    hosts:
    - {{ .Values.ingress.hostname }}
  rules:
  - host: {{ .Values.ingress.hostname }}
    http:
      paths:
      - path: /current
        backend:
          serviceName: rotisserie-app
          servicePort: 3000
      - path: /
        backend:
          serviceName: rotisserie-static
          servicePort: 8082
      - path: /all
        backend:
          serviceName: rotisserie-app
          servicePort: 3000
  {{ if .Values.ingress.hostname2 }}
  - host: {{ .Values.ingress.hostname2 }}
    http:
      paths:
      - path: /current
        backend:
          serviceName: rotisserie-app
          servicePort: 3000
      - path: /
        backend:
          serviceName: rotisserie-static
          servicePort: 8082
      - path: /all
        backend:
          serviceName: rotisserie-app
          servicePort: 3000
  {{ end }}
